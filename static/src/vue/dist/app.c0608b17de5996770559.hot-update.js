webpackHotUpdate("app",{

/***/ "./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./src/components/Home.vue?vue&type=script&lang=js&":
/*!*************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Home.vue?vue&type=script&lang=js& ***!
  \*************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _home_alejandro_Development_napkin_napkin_frontend_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"./node_modules/core-js/modules/es.regexp.exec.js\");\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es_string_split_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.string.split.js */ \"./node_modules/core-js/modules/es.string.split.js\");\n/* harmony import */ var core_js_modules_es_string_split_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_split_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.array.concat.js */ \"./node_modules/core-js/modules/es.array.concat.js\");\n/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var core_js_modules_es_string_pad_start_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.string.pad-start.js */ \"./node_modules/core-js/modules/es.string.pad-start.js\");\n/* harmony import */ var core_js_modules_es_string_pad_start_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_pad_start_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  data: function data(vm) {\n    return {\n      loading: false,\n      loadingDialog: false,\n      resultsDialog: false,\n      hasError: false,\n      //FIRST FORM\n      totalSF: 1,\n      holdPeriod: 1,\n      purchasePrice: 1,\n      exitCapRate: 1,\n      inPlaceRentPSF: 1,\n      inPlaceExpiration: new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10),\n      inPlaceExpirationFormated: vm.formatDate(new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10)),\n      newTenantRentPSF: 1,\n      newTenantTISF: 1,\n      //SECOND FORM\n      analysisStart: new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10),\n      analysisStartFormated: vm.formatDate(new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10)),\n      reimbursement: 100,\n      brokerComission: 1,\n      exitCosts: 2,\n      upfrontCapexCostsPSF: 5,\n      transactionCosts: 1,\n      leasingComissions: 7,\n      expesnsesSfYr: 3.0,\n      ltc: 60,\n      financingFee: 1,\n      interestRate: 4,\n      rentSteps: 4,\n      downtimeMonths: 9,\n      capexReserves: 0.15,\n      otherClosingCosts: 1,\n      acquisitionFees: 1,\n      //RESULTS\n      unleveredIRR: 0,\n      unleveredMOC: 0,\n      grossLeveredIRR: 0,\n      grossLeveredMOC: 0,\n      yieldOnCost: 0,\n      allInputs: false,\n      valid: true,\n      validAll: true,\n      modalAnalysis: null,\n      modalInPlaceExpiration: null,\n      date: new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10),\n      numberRules: [//(v) => !!v || \"The field is required\",\n      function (v) {\n        return v && v >= 0 || \"Value should be more than 0\";\n      }]\n    };\n  },\n  computed: {\n    computedInPlaceExpirationFormated: function computedInPlaceExpirationFormated() {\n      return this.formatDate(this.inPlaceExpiration);\n    },\n    computedAnalysisStartFormated: function computedAnalysisStartFormated() {\n      return this.formatDate(this.analysisStart);\n    }\n  },\n  watch: {\n    loading: function loading() {\n      return this.loading;\n    },\n    date: function date() {\n      this.inPlaceExpirationFormated = this.formatDate(this.date);\n    }\n  },\n  methods: {\n    formatDate: function formatDate(date) {\n      if (!date) return null;\n\n      var _date$split = date.split(\"-\"),\n          _date$split2 = Object(_home_alejandro_Development_napkin_napkin_frontend_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_date$split, 3),\n          year = _date$split2[0],\n          month = _date$split2[1],\n          day = _date$split2[2];\n\n      return \"\".concat(month, \"/\").concat(day, \"/\").concat(year);\n    },\n    parseDate: function parseDate(date) {\n      if (!date) return null;\n\n      var _date$split3 = date.split(\"/\"),\n          _date$split4 = Object(_home_alejandro_Development_napkin_napkin_frontend_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_date$split3, 3),\n          month = _date$split4[0],\n          day = _date$split4[1],\n          year = _date$split4[2];\n\n      return \"\".concat(year, \"-\").concat(month.padStart(2, \"0\"), \"-\").concat(day.padStart(2, \"0\"));\n    },\n    calculate: function calculate() {\n      var _this = this;\n\n      console.log(\"Call G Sheets Endpoint\");\n\n      if (!this.$refs.form.validate()) {\n        console.log(\"First form invalid\");\n        return;\n      }\n\n      console.log(\"First form valid\");\n\n      if (this.$data.allInputs) {\n        if (!this.$refs.more.validate()) {\n          console.log(\"Second form invalid\");\n          return;\n        }\n\n        console.log(\"Second form valid\");\n      }\n\n      this.$data.loadingDialog = true;\n      this.$data.loading = true;\n      this.$data.hasError = false;\n      var payload = {\n        totalSF: this.$data.totalSF,\n        holdPeriod: this.$data.holdPeriod,\n        purchasePrice: this.$data.purchasePrice,\n        exitCapRate: this.$data.exitCapRate,\n        inPlaceRentPSF: this.$data.inPlaceRentPSF,\n        inPlaceExpiration: this.computedInPlaceExpirationFormated,\n        newTenantRentPSF: this.$data.newTenantRentPSF,\n        newTenantTISF: this.$data.newTenantTISF,\n        allInputs: false\n      };\n\n      if (this.$data.allInputs) {\n        payload.allInputs = true;\n        payload[\"analysisStart\"] = this.$data.computedAnalysisStartFormated;\n        payload[\"reimbursement\"] = this.$data.reimbursement;\n        payload[\"brokerComission\"] = this.$data.brokerComission;\n        payload[\"exitCosts\"] = this.$data.exitCosts;\n        payload[\"upfrontCapexCostsPSF\"] = this.$data.upfrontCapexCostsPSF;\n        payload[\"transactionCosts\"] = this.$data.transactionCosts;\n        payload[\"leasingComissions\"] = this.$data.leasingComissions;\n        payload[\"expesnsesSfYr\"] = this.$data.expesnsesSfYr;\n        payload[\"ltc\"] = this.$data.ltc;\n        payload[\"financingFee\"] = this.$data.financingFee;\n        payload[\"interestRate\"] = this.$data.interestRate;\n        payload[\"rentSteps\"] = this.$data.rentSteps;\n        payload[\"downtimeMonths\"] = this.$data.downtimeMonths;\n        payload[\"capexReserves\"] = this.$data.capexReserves;\n        payload[\"otherClosingCosts\"] = this.$data.otherClosingCosts;\n        payload[\"acquisitionFees\"] = this.$data.acquisitionFees;\n      }\n\n      axios__WEBPACK_IMPORTED_MODULE_5___default()({\n        method: \"post\",\n        url: \"http://localhost:8000/calculator/api/calculator\",\n        data: payload,\n        headers: {\n          Authorization: \"jwt \" + this.$store.state.jwt\n        }\n      }).then(function (response) {\n        console.log(\"Response \", response);\n        _this.$data.unleveredIRR = response.data.unleveredIRR;\n        _this.$data.unleveredMOC = response.data.unleveredMOC;\n        _this.$data.grossLeveredIRR = response.data.grossLeveredIRR;\n        _this.$data.grossLeveredMOC = response.data.grossLeveredMOC;\n        _this.$data.yieldOnCost = response.data.yieldOnCost;\n        _this.$data.loading = false;\n        _this.$data.loadingDialog = false;\n        _this.$data.resultsDialog = true;\n      }).catch(function (error) {\n        console.log(\"Error \", error);\n        _this.$data.loading = false;\n        _this.$data.hasError = true;\n        _this.$data.loadingDialog = false;\n      });\n    },\n    canSubmit: function canSubmit() {\n      if (this.$data.allInputs) {\n        return this.$data.valid && this.$data.validAll;\n      }\n\n      return this.$data.valid;\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./src/components/Home.vue?vue&type=script&lang=js&\n");

/***/ })

})