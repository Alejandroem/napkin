webpackHotUpdate("app",{

/***/ "./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./src/components/Home.vue?vue&type=script&lang=js&":
/*!*************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Home.vue?vue&type=script&lang=js& ***!
  \*************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _home_alejandro_Development_napkin_napkin_frontend_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"./node_modules/core-js/modules/es.regexp.exec.js\");\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es_string_split_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.string.split.js */ \"./node_modules/core-js/modules/es.string.split.js\");\n/* harmony import */ var core_js_modules_es_string_split_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_split_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.array.concat.js */ \"./node_modules/core-js/modules/es.array.concat.js\");\n/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var core_js_modules_es_string_pad_start_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.string.pad-start.js */ \"./node_modules/core-js/modules/es.string.pad-start.js\");\n/* harmony import */ var core_js_modules_es_string_pad_start_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_pad_start_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  data: function data(vm) {\n    return {\n      loading: false,\n      hasError: false,\n      //FIRST FORM\n      totalSF: 1,\n      holdPeriod: 1,\n      purchasePrice: 1,\n      exitCapRate: 1,\n      inPlaceRentPSF: 1,\n      inPlaceExpiration: new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10),\n      inPlaceExpirationFormated: vm.formatDate(new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10)),\n      newTenantRentPSF: 1,\n      newTenantTISF: 1,\n      //SECOND FORM\n      analysisStart: new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10),\n      analysisStartFormated: vm.formatDate(new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10)),\n      reimbursement: 100,\n      brokerComission: 1,\n      exitCosts: 2,\n      upfrontCapexCostsPSF: 5,\n      transactionCosts: 1,\n      leasingComissions: 7,\n      expesnsesSfYr: 3.0,\n      ltc: 60,\n      financingFee: 1,\n      interestRate: 4,\n      rentSteps: 4,\n      downtimeMonths: 9,\n      capexReserves: 0.15,\n      otherClosingCosts: 1,\n      acquisitionFees: 1,\n      //RESULTS\n      unleveredIRR: 0,\n      unleveredMOC: 0,\n      grossLeveredIRR: 0,\n      grossLeveredMOC: 0,\n      yieldOnCost: 0,\n      allInputs: false,\n      valid: true,\n      validAll: true,\n      modalAnalysis: null,\n      modalInPlaceExpiration: null,\n      date: new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10),\n      numberRules: [//(v) => !!v || \"The field is required\",\n      function (v) {\n        return v && v >= 0 || \"Value should be more than 0\";\n      }]\n    };\n  },\n  computed: {\n    computedInPlaceExpirationFormated: function computedInPlaceExpirationFormated() {\n      return this.formatDate(this.inPlaceExpiration);\n    },\n    computedAnalysisStartFormated: function computedAnalysisStartFormated() {\n      return this.formatDate(this.analysisStart);\n    }\n  },\n  watch: {\n    loading: function loading() {\n      return this.loading;\n    },\n    date: function date() {\n      this.inPlaceExpirationFormated = this.formatDate(this.date);\n    }\n  },\n  methods: {\n    formatDate: function formatDate(date) {\n      if (!date) return null;\n\n      var _date$split = date.split(\"-\"),\n          _date$split2 = Object(_home_alejandro_Development_napkin_napkin_frontend_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_date$split, 3),\n          year = _date$split2[0],\n          month = _date$split2[1],\n          day = _date$split2[2];\n\n      return \"\".concat(month, \"/\").concat(day, \"/\").concat(year);\n    },\n    parseDate: function parseDate(date) {\n      if (!date) return null;\n\n      var _date$split3 = date.split(\"/\"),\n          _date$split4 = Object(_home_alejandro_Development_napkin_napkin_frontend_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_date$split3, 3),\n          month = _date$split4[0],\n          day = _date$split4[1],\n          year = _date$split4[2];\n\n      return \"\".concat(year, \"-\").concat(month.padStart(2, \"0\"), \"-\").concat(day.padStart(2, \"0\"));\n    },\n    calculate: function calculate() {\n      var _this = this;\n\n      console.log(\"Call G Sheets Endpoint\");\n\n      if (!this.$refs.form.validate()) {\n        console.log(\"First form invalid\");\n        return;\n      }\n\n      console.log(\"First form valid\");\n\n      if (this.$data.allInputs) {\n        if (!this.$refs.more.validate()) {\n          console.log(\"Second form invalid\");\n          return;\n        }\n\n        console.log(\"Second form valid\");\n      }\n\n      this.$data.loading = true;\n      this.$data.hasError = false;\n      var payload = {\n        totalSF: this.$data.totalSF,\n        holdPeriod: this.$data.holdPeriod,\n        purchasePrice: this.$data.purchasePrice,\n        exitCapRate: this.$data.exitCapRate,\n        inPlaceRentPSF: this.$data.inPlaceRentPSF,\n        inPlaceExpiration: this.computedInPlaceExpirationFormated,\n        newTenantRentPSF: this.$data.newTenantRentPSF,\n        newTenantTISF: this.$data.newTenantTISF,\n        allInputs: false\n      };\n\n      if (this.$data.allInputs) {\n        payload.allInputs = true;\n        payload[\"analysisStart\"] = this.$data.computedAnalysisStartFormated;\n        payload[\"reimbursement\"] = this.$data.reimbursement;\n        payload[\"brokerComission\"] = this.$data.brokerComission;\n        payload[\"exitCosts\"] = this.$data.exitCosts;\n        payload[\"upfrontCapexCostsPSF\"] = this.$data.upfrontCapexCostsPSF;\n        payload[\"transactionCosts\"] = this.$data.transactionCosts;\n        payload[\"leasingComissions\"] = this.$data.leasingComissions;\n        payload[\"expesnsesSfYr\"] = this.$data.expesnsesSfYr;\n        payload[\"ltc\"] = this.$data.ltc;\n        payload[\"financingFee\"] = this.$data.financingFee;\n        payload[\"interestRate\"] = this.$data.interestRate;\n        payload[\"rentSteps\"] = this.$data.rentSteps;\n        payload[\"downtimeMonths\"] = this.$data.downtimeMonths;\n        payload[\"capexReserves\"] = this.$data.capexReserves;\n        payload[\"otherClosingCosts\"] = this.$data.otherClosingCosts;\n        payload[\"acquisitionFees\"] = this.$data.acquisitionFees;\n      }\n\n      axios__WEBPACK_IMPORTED_MODULE_5___default()({\n        method: \"post\",\n        url: \"http://localhost:8000/calculator/api/calculator\",\n        data: payload,\n        headers: {\n          Authorization: \"jwt \" + this.$store.state.jwt\n        }\n      }).then(function (response) {\n        console.log(\"Response \", response);\n        _this.$data.unleveredIRR = response.data.unleveredIRR;\n        _this.$data.unleveredMOC = response.data.unleveredMOC;\n        _this.$data.grossLeveredIRR = response.data.grossLeveredIRR;\n        _this.$data.grossLeveredMOC = response.data.grossLeveredMOC;\n        _this.$data.yieldOnCost = response.data.yieldOnCost;\n        _this.$data.loading = false;\n      }).catch(function (error) {\n        console.log(\"Error \", error);\n        _this.$data.loading = false;\n        _this.$data.hasError = true;\n      });\n    },\n    canSubmit: function canSubmit() {\n      if (this.$data.allInputs) {\n        return this.$data.valid && this.$data.validAll;\n      }\n\n      return this.$data.valid;\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPyEuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4vbm9kZV9tb2R1bGVzL2NhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/IS4vc3JjL2NvbXBvbmVudHMvSG9tZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vL0hvbWUudnVlPzc2ZjIiXSwic291cmNlc0NvbnRlbnQiOlsiPHRlbXBsYXRlPlxuICA8ZGl2PlxuICAgIDx2LWNvbnRhaW5lciBmaWxsLWhlaWdodCBmbHVpZD5cbiAgICAgIDx2LXJvdyBuby1ndXR0ZXJzIGp1c3RpZnk9XCJjZW50ZXJcIiBjbGFzcz1cIm1hLTRcIj5cbiAgICAgICAgPHYtY29sIGNvbHM9XCI4XCI+XG4gICAgICAgICAgPHYtY2FyZCBjbGFzcz1cInBhLTZcIj5cbiAgICAgICAgICAgIDxoMz5JbnB1dDwvaDM+XG4gICAgICAgICAgICA8di1mb3JtXG4gICAgICAgICAgICAgIHJlZj1cImZvcm1cIlxuICAgICAgICAgICAgICB2LW1vZGVsPVwidmFsaWRcIlxuICAgICAgICAgICAgICBsYXp5LXZhbGlkYXRpb25cbiAgICAgICAgICAgICAgYWxpZ249XCJjZW50ZXJcIlxuICAgICAgICAgICAgICBqdXN0aWZ5PVwiY2VudGVyXCJcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPHYtcm93PlxuICAgICAgICAgICAgICAgIDx2LWNvbCBjb2xzPVwiNlwiPlxuICAgICAgICAgICAgICAgICAgPHYtcm93PlxuICAgICAgICAgICAgICAgICAgICA8di1jb2wgY29scz1cIjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8di1zdWJoZWFkZXI+VG90YWwgU0Y8L3Ytc3ViaGVhZGVyPlxuICAgICAgICAgICAgICAgICAgICA8L3YtY29sPlxuICAgICAgICAgICAgICAgICAgICA8di1jb2wgY29scz1cIjhcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkXG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwibnVtYmVyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9XCJ0b3RhbFNGXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIDpydWxlcz1cIm51bWJlclJ1bGVzXCJcbiAgICAgICAgICAgICAgICAgICAgICA+PC92LXRleHQtZmllbGQ+XG4gICAgICAgICAgICAgICAgICAgIDwvdi1jb2w+XG4gICAgICAgICAgICAgICAgICA8L3Ytcm93PlxuXG4gICAgICAgICAgICAgICAgICA8di1yb3c+XG4gICAgICAgICAgICAgICAgICAgIDx2LWNvbCBjb2xzPVwiNFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDx2LXN1YmhlYWRlcj5Ib2xkIHBlcmlvZDwvdi1zdWJoZWFkZXI+XG4gICAgICAgICAgICAgICAgICAgIDwvdi1jb2w+XG4gICAgICAgICAgICAgICAgICAgIDx2LWNvbCBjb2xzPVwiOFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGRcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJudW1iZXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD1cImhvbGRQZXJpb2RcIlxuICAgICAgICAgICAgICAgICAgICAgICAgOnJ1bGVzPVwibnVtYmVyUnVsZXNcIlxuICAgICAgICAgICAgICAgICAgICAgID48L3YtdGV4dC1maWVsZD5cbiAgICAgICAgICAgICAgICAgICAgPC92LWNvbD5cbiAgICAgICAgICAgICAgICAgIDwvdi1yb3c+XG5cbiAgICAgICAgICAgICAgICAgIDx2LXJvdz5cbiAgICAgICAgICAgICAgICAgICAgPHYtY29sIGNvbHM9XCI0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgPHYtc3ViaGVhZGVyPlB1cmNoYXNlIFByaWNlPC92LXN1YmhlYWRlcj5cbiAgICAgICAgICAgICAgICAgICAgPC92LWNvbD5cbiAgICAgICAgICAgICAgICAgICAgPHYtY29sIGNvbHM9XCI4XCI+XG4gICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cIm51bWJlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPVwicHVyY2hhc2VQcmljZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICA6cnVsZXM9XCJudW1iZXJSdWxlc1wiXG4gICAgICAgICAgICAgICAgICAgICAgPjwvdi10ZXh0LWZpZWxkPlxuICAgICAgICAgICAgICAgICAgICA8L3YtY29sPlxuICAgICAgICAgICAgICAgICAgPC92LXJvdz5cblxuICAgICAgICAgICAgICAgICAgPHYtcm93PlxuICAgICAgICAgICAgICAgICAgICA8di1jb2wgY29scz1cIjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8di1zdWJoZWFkZXI+RXhpdCBjYXAgcmF0ZTwvdi1zdWJoZWFkZXI+XG4gICAgICAgICAgICAgICAgICAgIDwvdi1jb2w+XG4gICAgICAgICAgICAgICAgICAgIDx2LWNvbCBjb2xzPVwiOFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGRcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJudW1iZXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD1cImV4aXRDYXBSYXRlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1ZmZpeD1cIiVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgOnJ1bGVzPVwibnVtYmVyUnVsZXNcIlxuICAgICAgICAgICAgICAgICAgICAgID48L3YtdGV4dC1maWVsZD5cbiAgICAgICAgICAgICAgICAgICAgPC92LWNvbD5cbiAgICAgICAgICAgICAgICAgIDwvdi1yb3c+XG4gICAgICAgICAgICAgICAgPC92LWNvbD5cblxuICAgICAgICAgICAgICAgIDx2LWNvbCBjb2xzPVwiNlwiPlxuICAgICAgICAgICAgICAgICAgPHYtcm93PlxuICAgICAgICAgICAgICAgICAgICA8di1jb2wgY29scz1cIjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8di1zdWJoZWFkZXI+SW4gUGxhY2UgUmVudCBQU0Y8L3Ytc3ViaGVhZGVyPlxuICAgICAgICAgICAgICAgICAgICA8L3YtY29sPlxuICAgICAgICAgICAgICAgICAgICA8di1jb2wgY29scz1cIjhcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkXG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwibnVtYmVyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9XCJpblBsYWNlUmVudFBTRlwiXG4gICAgICAgICAgICAgICAgICAgICAgICA6cnVsZXM9XCJudW1iZXJSdWxlc1wiXG4gICAgICAgICAgICAgICAgICAgICAgPjwvdi10ZXh0LWZpZWxkPlxuICAgICAgICAgICAgICAgICAgICA8L3YtY29sPlxuICAgICAgICAgICAgICAgICAgPC92LXJvdz5cblxuICAgICAgICAgICAgICAgICAgPHYtcm93PlxuICAgICAgICAgICAgICAgICAgICA8di1jb2wgY29scz1cIjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8di1zdWJoZWFkZXI+SW4gUGxhY2UgRXhwaXJhdGlvbjwvdi1zdWJoZWFkZXI+XG4gICAgICAgICAgICAgICAgICAgIDwvdi1jb2w+XG4gICAgICAgICAgICAgICAgICAgIDx2LWNvbCBjb2xzPVwiOFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDx2LWRpYWxvZ1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVmPVwiZGlhbG9nSW5QbGFjZUV4cGlyYXRpb25cIlxuICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD1cIm1vZGFsSW5QbGFjZUV4cGlyYXRpb25cIlxuICAgICAgICAgICAgICAgICAgICAgICAgOnJldHVybi12YWx1ZS5zeW5jPVwiaW5QbGFjZUV4cGlyYXRpb25cIlxuICAgICAgICAgICAgICAgICAgICAgICAgcGVyc2lzdGVudFxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg9XCIyOTBweFwiXG4gICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHYtc2xvdDphY3RpdmF0b3I9XCJ7IG9uLCBhdHRycyB9XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPVwiY29tcHV0ZWRJblBsYWNlRXhwaXJhdGlvbkZvcm1hdGVkXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkb25seVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYtYmluZD1cImF0dHJzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LW9uPVwib25cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICA+PC92LXRleHQtZmllbGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHYtZGF0ZS1waWNrZXIgdi1tb2RlbD1cImluUGxhY2VFeHBpcmF0aW9uXCIgc2Nyb2xsYWJsZT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtc3BhY2VyPjwvdi1zcGFjZXI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWJ0blxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcj1cInByaW1hcnlcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz1cIm1vZGFsSW5QbGFjZUV4cGlyYXRpb24gPSBmYWxzZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDYW5jZWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWJ0bj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtYnRuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yPVwicHJpbWFyeVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQGNsaWNrPVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkcmVmcy5kaWFsb2dJblBsYWNlRXhwaXJhdGlvbi5zYXZlKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpblBsYWNlRXhwaXJhdGlvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBPS1xuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtYnRuPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC92LWRhdGUtcGlja2VyPlxuICAgICAgICAgICAgICAgICAgICAgIDwvdi1kaWFsb2c+XG4gICAgICAgICAgICAgICAgICAgIDwvdi1jb2w+XG4gICAgICAgICAgICAgICAgICA8L3Ytcm93PlxuXG4gICAgICAgICAgICAgICAgICA8di1yb3c+XG4gICAgICAgICAgICAgICAgICAgIDx2LWNvbCBjb2xzPVwiNFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDx2LXN1YmhlYWRlcj5OZXcgVGVuYW50IFJlbnQgUFNGPC92LXN1YmhlYWRlcj5cbiAgICAgICAgICAgICAgICAgICAgPC92LWNvbD5cbiAgICAgICAgICAgICAgICAgICAgPHYtY29sIGNvbHM9XCI4XCI+XG4gICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cIm51bWJlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPVwibmV3VGVuYW50UmVudFBTRlwiXG4gICAgICAgICAgICAgICAgICAgICAgICA6cnVsZXM9XCJudW1iZXJSdWxlc1wiXG4gICAgICAgICAgICAgICAgICAgICAgPjwvdi10ZXh0LWZpZWxkPlxuICAgICAgICAgICAgICAgICAgICA8L3YtY29sPlxuICAgICAgICAgICAgICAgICAgPC92LXJvdz5cblxuICAgICAgICAgICAgICAgICAgPHYtcm93PlxuICAgICAgICAgICAgICAgICAgICA8di1jb2wgY29scz1cIjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8di1zdWJoZWFkZXI+TmV3IFRlbmFudCBUSS9TRjwvdi1zdWJoZWFkZXI+XG4gICAgICAgICAgICAgICAgICAgIDwvdi1jb2w+XG4gICAgICAgICAgICAgICAgICAgIDx2LWNvbCBjb2xzPVwiOFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGRcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJudW1iZXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD1cIm5ld1RlbmFudFRJU0ZcIlxuICAgICAgICAgICAgICAgICAgICAgICAgOnJ1bGVzPVwibnVtYmVyUnVsZXNcIlxuICAgICAgICAgICAgICAgICAgICAgID48L3YtdGV4dC1maWVsZD5cbiAgICAgICAgICAgICAgICAgICAgPC92LWNvbD5cbiAgICAgICAgICAgICAgICAgIDwvdi1yb3c+XG4gICAgICAgICAgICAgICAgPC92LWNvbD5cbiAgICAgICAgICAgICAgPC92LXJvdz5cbiAgICAgICAgICAgIDwvdi1mb3JtPlxuICAgICAgICAgICAgPHRlbXBsYXRlIHYtaWY9XCJhbGxJbnB1dHNcIj5cbiAgICAgICAgICAgICAgPHYtZGl2aWRlciBjbGFzcz1cIm1hLTRcIj48L3YtZGl2aWRlcj5cbiAgICAgICAgICAgICAgPHYtZm9ybVxuICAgICAgICAgICAgICAgIHJlZj1cIm1vcmVcIlxuICAgICAgICAgICAgICAgIHYtbW9kZWw9XCJ2YWxpZEFsbFwiXG4gICAgICAgICAgICAgICAgbGF6eS12YWxpZGF0aW9uXG4gICAgICAgICAgICAgICAgYWxpZ249XCJjZW50ZXJcIlxuICAgICAgICAgICAgICAgIGp1c3RpZnk9XCJjZW50ZXJcIlxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPHYtcm93PlxuICAgICAgICAgICAgICAgICAgPHYtY29sIGNvbHM9XCI2XCI+XG4gICAgICAgICAgICAgICAgICAgIDx2LXJvdz5cbiAgICAgICAgICAgICAgICAgICAgICA8di1jb2wgY29scz1cIjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx2LXN1YmhlYWRlcj5BbmFseXNpcyBTdGFydDwvdi1zdWJoZWFkZXI+XG4gICAgICAgICAgICAgICAgICAgICAgPC92LWNvbD5cbiAgICAgICAgICAgICAgICAgICAgICA8di1jb2wgY29scz1cIjhcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx2LWRpYWxvZ1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZWY9XCJkaWFsb2dBbmFseXNpc1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9XCJtb2RhbEFuYWx5c2lzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgOnJldHVybi12YWx1ZS5zeW5jPVwiYW5hbHlzaXNTdGFydFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHBlcnNpc3RlbnRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg9XCIyOTBweFwiXG4gICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LXNsb3Q6YWN0aXZhdG9yPVwieyBvbiwgYXR0cnMgfVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9XCJjb21wdXRlZEFuYWx5c2lzU3RhcnRGb3JtYXRlZFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkb25seVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdi1iaW5kPVwiYXR0cnNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdi1vbj1cIm9uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA+PC92LXRleHQtZmllbGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWRhdGUtcGlja2VyIHYtbW9kZWw9XCJhbmFseXNpc1N0YXJ0XCIgc2Nyb2xsYWJsZT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1zcGFjZXI+PC92LXNwYWNlcj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1idG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yPVwicHJpbWFyeVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9XCJtb2RhbEFuYWx5c2lzID0gZmFsc2VcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENhbmNlbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1idG4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtYnRuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcj1cInByaW1hcnlcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGNsaWNrPVwiJHJlZnMuZGlhbG9nQW5hbHlzaXMuc2F2ZShhbmFseXNpc1N0YXJ0KVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgT0tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtYnRuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtZGF0ZS1waWNrZXI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3YtZGlhbG9nPlxuICAgICAgICAgICAgICAgICAgICAgIDwvdi1jb2w+XG4gICAgICAgICAgICAgICAgICAgIDwvdi1yb3c+XG5cbiAgICAgICAgICAgICAgICAgICAgPHYtcm93PlxuICAgICAgICAgICAgICAgICAgICAgIDx2LWNvbCBjb2xzPVwiNFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHYtc3ViaGVhZGVyPlJlaW1idXJzZW1lbnQ8L3Ytc3ViaGVhZGVyPlxuICAgICAgICAgICAgICAgICAgICAgIDwvdi1jb2w+XG4gICAgICAgICAgICAgICAgICAgICAgPHYtY29sIGNvbHM9XCI4XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJudW1iZXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPVwicmVpbWJ1cnNlbWVudFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHN1ZmZpeD1cIiVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgPjwvdi10ZXh0LWZpZWxkPlxuICAgICAgICAgICAgICAgICAgICAgIDwvdi1jb2w+XG4gICAgICAgICAgICAgICAgICAgIDwvdi1yb3c+XG5cbiAgICAgICAgICAgICAgICAgICAgPHYtcm93PlxuICAgICAgICAgICAgICAgICAgICAgIDx2LWNvbCBjb2xzPVwiNFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHYtc3ViaGVhZGVyPkJyb2tlciBDb21pc3Npb248L3Ytc3ViaGVhZGVyPlxuICAgICAgICAgICAgICAgICAgICAgIDwvdi1jb2w+XG4gICAgICAgICAgICAgICAgICAgICAgPHYtY29sIGNvbHM9XCI4XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJudW1iZXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPVwiYnJva2VyQ29taXNzaW9uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc3VmZml4PVwiJVwiXG4gICAgICAgICAgICAgICAgICAgICAgICA+PC92LXRleHQtZmllbGQ+XG4gICAgICAgICAgICAgICAgICAgICAgPC92LWNvbD5cbiAgICAgICAgICAgICAgICAgICAgPC92LXJvdz5cblxuICAgICAgICAgICAgICAgICAgICA8di1yb3c+XG4gICAgICAgICAgICAgICAgICAgICAgPHYtY29sIGNvbHM9XCI0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8di1zdWJoZWFkZXI+RXhpdCBDb3N0czwvdi1zdWJoZWFkZXI+XG4gICAgICAgICAgICAgICAgICAgICAgPC92LWNvbD5cbiAgICAgICAgICAgICAgICAgICAgICA8di1jb2wgY29scz1cIjhcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cIm51bWJlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9XCJleGl0Q29zdHNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICBzdWZmaXg9XCIlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgID48L3YtdGV4dC1maWVsZD5cbiAgICAgICAgICAgICAgICAgICAgICA8L3YtY29sPlxuICAgICAgICAgICAgICAgICAgICA8L3Ytcm93PlxuXG4gICAgICAgICAgICAgICAgICAgIDx2LXJvdz5cbiAgICAgICAgICAgICAgICAgICAgICA8di1jb2wgY29scz1cIjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx2LXN1YmhlYWRlcj5VcGZyb250IENBUEVYIENvc3RzIFBTRjwvdi1zdWJoZWFkZXI+XG4gICAgICAgICAgICAgICAgICAgICAgPC92LWNvbD5cbiAgICAgICAgICAgICAgICAgICAgICA8di1jb2wgY29scz1cIjhcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cIm51bWJlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9XCJ1cGZyb250Q2FwZXhDb3N0c1BTRlwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHN1ZmZpeD1cIiRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgPjwvdi10ZXh0LWZpZWxkPlxuICAgICAgICAgICAgICAgICAgICAgIDwvdi1jb2w+XG4gICAgICAgICAgICAgICAgICAgIDwvdi1yb3c+XG5cbiAgICAgICAgICAgICAgICAgICAgPHYtcm93PlxuICAgICAgICAgICAgICAgICAgICAgIDx2LWNvbCBjb2xzPVwiNFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHYtc3ViaGVhZGVyPlRyYW5zYWN0aW9uIGNvc3RzPC92LXN1YmhlYWRlcj5cbiAgICAgICAgICAgICAgICAgICAgICA8L3YtY29sPlxuICAgICAgICAgICAgICAgICAgICAgIDx2LWNvbCBjb2xzPVwiOFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZFxuICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwibnVtYmVyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD1cInRyYW5zYWN0aW9uQ29zdHNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICBzdWZmaXg9XCIlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgID48L3YtdGV4dC1maWVsZD5cbiAgICAgICAgICAgICAgICAgICAgICA8L3YtY29sPlxuICAgICAgICAgICAgICAgICAgICA8L3Ytcm93PlxuXG4gICAgICAgICAgICAgICAgICAgIDx2LXJvdz5cbiAgICAgICAgICAgICAgICAgICAgICA8di1jb2wgY29scz1cIjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx2LXN1YmhlYWRlcj5MZWFzaW5nIENvbWlzc2lvbnM8L3Ytc3ViaGVhZGVyPlxuICAgICAgICAgICAgICAgICAgICAgIDwvdi1jb2w+XG4gICAgICAgICAgICAgICAgICAgICAgPHYtY29sIGNvbHM9XCI4XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJudW1iZXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPVwibGVhc2luZ0NvbWlzc2lvbnNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICBzdWZmaXg9XCIlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgID48L3YtdGV4dC1maWVsZD5cbiAgICAgICAgICAgICAgICAgICAgICA8L3YtY29sPlxuICAgICAgICAgICAgICAgICAgICA8L3Ytcm93PlxuXG4gICAgICAgICAgICAgICAgICAgIDx2LXJvdz5cbiAgICAgICAgICAgICAgICAgICAgICA8di1jb2wgY29scz1cIjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx2LXN1YmhlYWRlcj5FeHBlbnNlcyAvIFNGIC8gWXI8L3Ytc3ViaGVhZGVyPlxuICAgICAgICAgICAgICAgICAgICAgIDwvdi1jb2w+XG4gICAgICAgICAgICAgICAgICAgICAgPHYtY29sIGNvbHM9XCI4XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJudW1iZXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPVwiZXhwZXNuc2VzU2ZZclwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHN1ZmZpeD1cIiRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgPjwvdi10ZXh0LWZpZWxkPlxuICAgICAgICAgICAgICAgICAgICAgIDwvdi1jb2w+XG4gICAgICAgICAgICAgICAgICAgIDwvdi1yb3c+XG4gICAgICAgICAgICAgICAgICA8L3YtY29sPlxuICAgICAgICAgICAgICAgICAgPHYtY29sIGNvbHM9XCI2XCI+XG4gICAgICAgICAgICAgICAgICAgIDx2LXJvdz5cbiAgICAgICAgICAgICAgICAgICAgICA8di1jb2wgY29scz1cIjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx2LXN1YmhlYWRlcj5MVEM8L3Ytc3ViaGVhZGVyPlxuICAgICAgICAgICAgICAgICAgICAgIDwvdi1jb2w+XG4gICAgICAgICAgICAgICAgICAgICAgPHYtY29sIGNvbHM9XCI4XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJudW1iZXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPVwibHRjXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc3VmZml4PVwiJVwiXG4gICAgICAgICAgICAgICAgICAgICAgICA+PC92LXRleHQtZmllbGQ+XG4gICAgICAgICAgICAgICAgICAgICAgPC92LWNvbD5cbiAgICAgICAgICAgICAgICAgICAgPC92LXJvdz5cblxuICAgICAgICAgICAgICAgICAgICA8di1yb3c+XG4gICAgICAgICAgICAgICAgICAgICAgPHYtY29sIGNvbHM9XCI0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8di1zdWJoZWFkZXI+RmluYW5jaW5nIEZlZTwvdi1zdWJoZWFkZXI+XG4gICAgICAgICAgICAgICAgICAgICAgPC92LWNvbD5cbiAgICAgICAgICAgICAgICAgICAgICA8di1jb2wgY29scz1cIjhcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cIm51bWJlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9XCJmaW5hbmNpbmdGZWVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICBzdWZmaXg9XCIlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgID48L3YtdGV4dC1maWVsZD5cbiAgICAgICAgICAgICAgICAgICAgICA8L3YtY29sPlxuICAgICAgICAgICAgICAgICAgICA8L3Ytcm93PlxuXG4gICAgICAgICAgICAgICAgICAgIDx2LXJvdz5cbiAgICAgICAgICAgICAgICAgICAgICA8di1jb2wgY29scz1cIjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx2LXN1YmhlYWRlcj5JbnRlcmVzdCBSYXRlPC92LXN1YmhlYWRlcj5cbiAgICAgICAgICAgICAgICAgICAgICA8L3YtY29sPlxuICAgICAgICAgICAgICAgICAgICAgIDx2LWNvbCBjb2xzPVwiOFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZFxuICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwibnVtYmVyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD1cImludGVyZXN0UmF0ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHN1ZmZpeD1cIiVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgPjwvdi10ZXh0LWZpZWxkPlxuICAgICAgICAgICAgICAgICAgICAgIDwvdi1jb2w+XG4gICAgICAgICAgICAgICAgICAgIDwvdi1yb3c+XG5cbiAgICAgICAgICAgICAgICAgICAgPHYtcm93PlxuICAgICAgICAgICAgICAgICAgICAgIDx2LWNvbCBjb2xzPVwiNFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHYtc3ViaGVhZGVyPlJlbnQgU3RlcHM8L3Ytc3ViaGVhZGVyPlxuICAgICAgICAgICAgICAgICAgICAgIDwvdi1jb2w+XG4gICAgICAgICAgICAgICAgICAgICAgPHYtY29sIGNvbHM9XCI4XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJudW1iZXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPVwicmVudFN0ZXBzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc3VmZml4PVwiJVwiXG4gICAgICAgICAgICAgICAgICAgICAgICA+PC92LXRleHQtZmllbGQ+XG4gICAgICAgICAgICAgICAgICAgICAgPC92LWNvbD5cbiAgICAgICAgICAgICAgICAgICAgPC92LXJvdz5cblxuICAgICAgICAgICAgICAgICAgICA8di1yb3c+XG4gICAgICAgICAgICAgICAgICAgICAgPHYtY29sIGNvbHM9XCI0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8di1zdWJoZWFkZXI+RG93bnRpbWUgTW9udGhzPC92LXN1YmhlYWRlcj5cbiAgICAgICAgICAgICAgICAgICAgICA8L3YtY29sPlxuICAgICAgICAgICAgICAgICAgICAgIDx2LWNvbCBjb2xzPVwiOFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZFxuICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwibnVtYmVyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD1cImRvd250aW1lTW9udGhzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgID48L3YtdGV4dC1maWVsZD5cbiAgICAgICAgICAgICAgICAgICAgICA8L3YtY29sPlxuICAgICAgICAgICAgICAgICAgICA8L3Ytcm93PlxuXG4gICAgICAgICAgICAgICAgICAgIDx2LXJvdz5cbiAgICAgICAgICAgICAgICAgICAgICA8di1jb2wgY29scz1cIjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx2LXN1YmhlYWRlcj5DQVBFWCBSZXNlcnZlczwvdi1zdWJoZWFkZXI+XG4gICAgICAgICAgICAgICAgICAgICAgPC92LWNvbD5cbiAgICAgICAgICAgICAgICAgICAgICA8di1jb2wgY29scz1cIjhcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cIm51bWJlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9XCJjYXBleFJlc2VydmVzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgID48L3YtdGV4dC1maWVsZD5cbiAgICAgICAgICAgICAgICAgICAgICA8L3YtY29sPlxuICAgICAgICAgICAgICAgICAgICA8L3Ytcm93PlxuXG4gICAgICAgICAgICAgICAgICAgIDx2LXJvdz5cbiAgICAgICAgICAgICAgICAgICAgICA8di1jb2wgY29scz1cIjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx2LXN1YmhlYWRlcj5PdGhlciBDbG9zaW5nIENvc3RzPC92LXN1YmhlYWRlcj5cbiAgICAgICAgICAgICAgICAgICAgICA8L3YtY29sPlxuICAgICAgICAgICAgICAgICAgICAgIDx2LWNvbCBjb2xzPVwiOFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZFxuICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwibnVtYmVyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD1cIm90aGVyQ2xvc2luZ0Nvc3RzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc3VmZml4PVwiJVwiXG4gICAgICAgICAgICAgICAgICAgICAgICA+PC92LXRleHQtZmllbGQ+XG4gICAgICAgICAgICAgICAgICAgICAgPC92LWNvbD5cbiAgICAgICAgICAgICAgICAgICAgPC92LXJvdz5cblxuICAgICAgICAgICAgICAgICAgICA8di1yb3c+XG4gICAgICAgICAgICAgICAgICAgICAgPHYtY29sIGNvbHM9XCI0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8di1zdWJoZWFkZXI+QWNxdWlzaXRpb24gRmVlczwvdi1zdWJoZWFkZXI+XG4gICAgICAgICAgICAgICAgICAgICAgPC92LWNvbD5cbiAgICAgICAgICAgICAgICAgICAgICA8di1jb2wgY29scz1cIjhcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cIm51bWJlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9XCJhY3F1aXNpdGlvbkZlZXNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICBzdWZmaXg9XCIlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgID48L3YtdGV4dC1maWVsZD5cbiAgICAgICAgICAgICAgICAgICAgICA8L3YtY29sPlxuICAgICAgICAgICAgICAgICAgICA8L3Ytcm93PlxuICAgICAgICAgICAgICAgICAgPC92LWNvbD5cbiAgICAgICAgICAgICAgICA8L3Ytcm93PlxuICAgICAgICAgICAgICA8L3YtZm9ybT5cbiAgICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgICAgICAgICA8di1yb3cgYWxpZ249XCJlbmRcIiBqdXN0aWZ5PVwiZW5kXCI+XG4gICAgICAgICAgICAgIDx2LWJ0blxuICAgICAgICAgICAgICAgIGNsYXNzPVwibXgtMlwiXG4gICAgICAgICAgICAgICAgZmFiXG4gICAgICAgICAgICAgICAgZGFya1xuICAgICAgICAgICAgICAgIGNvbG9yPVwiaW5kaWdvXCJcbiAgICAgICAgICAgICAgICBAY2xpY2s9XCJhbGxJbnB1dHMgPSAhYWxsSW5wdXRzXCJcbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDx2LWljb24gZGFyayB2LWlmPVwiIWFsbElucHV0c1wiPiBtZGktcGx1cyA8L3YtaWNvbj5cbiAgICAgICAgICAgICAgICA8di1pY29uIGRhcmsgdi1pZj1cImFsbElucHV0c1wiPiBtZGktbWludXMgPC92LWljb24+XG4gICAgICAgICAgICAgIDwvdi1idG4+XG4gICAgICAgICAgICA8L3Ytcm93PlxuICAgICAgICAgICAgPHYtcm93IGFsaWduPVwiY2VudGVyXCIganVzdGlmeT1cImNlbnRlclwiIHYtaWY9XCJoYXNFcnJvclwiPlxuICAgICAgICAgICAgICA8di1hbGVydCBjb2xvcj1cInJlZFwiIHR5cGU9XCJlcnJvclwiPlxuICAgICAgICAgICAgICAgIFRoZXJlIHdhcyBhbiBlcnJvciB3aXRoIHlvdXIgcmVxdWVzdCwgcmVmcmVzaCBhbmQgdHJ5IGFnYWluXG4gICAgICAgICAgICAgIDwvdi1hbGVydD5cbiAgICAgICAgICAgIDwvdi1yb3c+XG4gICAgICAgICAgICA8di1yb3cgYWxpZ249XCJjZW50ZXJcIiBqdXN0aWZ5PVwiY2VudGVyXCI+XG4gICAgICAgICAgICAgIDx2LWJ0blxuICAgICAgICAgICAgICAgIGNsYXNzPVwibWEtMlwiXG4gICAgICAgICAgICAgICAgOmxvYWRpbmc9XCJsb2FkaW5nXCJcbiAgICAgICAgICAgICAgICA6ZGlzYWJsZWQ9XCJsb2FkaW5nIHx8ICFjYW5TdWJtaXQoKVwiXG4gICAgICAgICAgICAgICAgY29sb3I9XCJzdWNjZXNzXCJcbiAgICAgICAgICAgICAgICBAY2xpY2s9XCJjYWxjdWxhdGVcIlxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgU2F2ZSAmIFJ1blxuICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LWlmPVwibG9hZGluZ1wiPlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJjdXN0b20tbG9hZGVyXCI+XG4gICAgICAgICAgICAgICAgICAgIDx2LWljb24gbGlnaHQ+bWRpLWNhY2hlZDwvdi1pY29uPlxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgICAgICAgICAgIDwvdi1idG4+XG4gICAgICAgICAgICA8L3Ytcm93PlxuICAgICAgICAgIDwvdi1jYXJkPlxuICAgICAgICA8L3YtY29sPlxuICAgICAgPC92LXJvdz5cblxuICAgICAgPHYtcm93IG5vLWd1dHRlcnMganVzdGlmeT1cImNlbnRlclwiIGNsYXNzPVwibWEtNFwiPlxuICAgICAgICA8di1jb2wgY29scz1cIjhcIj5cbiAgICAgICAgICA8di1jYXJkIGNsYXNzPVwicGEtNlwiPlxuICAgICAgICAgICAgPGgzPlJlc3VsdHM8L2gzPlxuICAgICAgICAgICAgPHYtcm93IHYtaWY9XCIhaGFzRXJyb3JcIj5cbiAgICAgICAgICAgICAgPHYtY29sIGNvbHM9XCI2XCI+XG4gICAgICAgICAgICAgICAgPHYtcm93PlxuICAgICAgICAgICAgICAgICAgPHYtY29sIGNvbHM9XCI0XCI+XG4gICAgICAgICAgICAgICAgICAgIDx2LXN1YmhlYWRlcj5VbmxldmVyZWQgSVJSPC92LXN1YmhlYWRlcj5cbiAgICAgICAgICAgICAgICAgIDwvdi1jb2w+XG4gICAgICAgICAgICAgICAgICA8di1jb2wgY29scz1cIjhcIj5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIHYtaWY9XCIhbG9hZGluZ1wiPnt7IHVubGV2ZXJlZElSUiB9fTwvbGFiZWw+XG5cbiAgICAgICAgICAgICAgICAgICAgPHYtcHJvZ3Jlc3MtbGluZWFyXG4gICAgICAgICAgICAgICAgICAgICAgdi1pZj1cImxvYWRpbmdcIlxuICAgICAgICAgICAgICAgICAgICAgIGNvbG9yPVwiZGVlcC1wdXJwbGUgYWNjZW50LTRcIlxuICAgICAgICAgICAgICAgICAgICAgIGluZGV0ZXJtaW5hdGVcbiAgICAgICAgICAgICAgICAgICAgICByb3VuZGVkXG4gICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0PVwiNlwiXG4gICAgICAgICAgICAgICAgICAgID48L3YtcHJvZ3Jlc3MtbGluZWFyPlxuICAgICAgICAgICAgICAgICAgPC92LWNvbD5cbiAgICAgICAgICAgICAgICA8L3Ytcm93PlxuXG4gICAgICAgICAgICAgICAgPHYtcm93PlxuICAgICAgICAgICAgICAgICAgPHYtY29sIGNvbHM9XCI0XCI+XG4gICAgICAgICAgICAgICAgICAgIDx2LXN1YmhlYWRlcj5VbmxldmVyZWQgTW9DPC92LXN1YmhlYWRlcj5cbiAgICAgICAgICAgICAgICAgIDwvdi1jb2w+XG4gICAgICAgICAgICAgICAgICA8di1jb2wgY29scz1cIjhcIj5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIHYtaWY9XCIhbG9hZGluZ1wiPnt7IHVubGV2ZXJlZE1PQyB9fTwvbGFiZWw+XG5cbiAgICAgICAgICAgICAgICAgICAgPHYtcHJvZ3Jlc3MtbGluZWFyXG4gICAgICAgICAgICAgICAgICAgICAgdi1pZj1cImxvYWRpbmdcIlxuICAgICAgICAgICAgICAgICAgICAgIGNvbG9yPVwiZGVlcC1wdXJwbGUgYWNjZW50LTRcIlxuICAgICAgICAgICAgICAgICAgICAgIGluZGV0ZXJtaW5hdGVcbiAgICAgICAgICAgICAgICAgICAgICByb3VuZGVkXG4gICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0PVwiNlwiXG4gICAgICAgICAgICAgICAgICAgID48L3YtcHJvZ3Jlc3MtbGluZWFyPlxuICAgICAgICAgICAgICAgICAgPC92LWNvbD5cbiAgICAgICAgICAgICAgICA8L3Ytcm93PlxuXG4gICAgICAgICAgICAgICAgPHYtcm93PlxuICAgICAgICAgICAgICAgICAgPHYtY29sIGNvbHM9XCI0XCI+XG4gICAgICAgICAgICAgICAgICAgIDx2LXN1YmhlYWRlcj5Hcm9zcyBMZXZlcmVkIElSUjwvdi1zdWJoZWFkZXI+XG4gICAgICAgICAgICAgICAgICA8L3YtY29sPlxuICAgICAgICAgICAgICAgICAgPHYtY29sIGNvbHM9XCI4XCI+XG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbCB2LWlmPVwiIWxvYWRpbmdcIj57eyBncm9zc0xldmVyZWRJUlIgfX08L2xhYmVsPlxuXG4gICAgICAgICAgICAgICAgICAgIDx2LXByb2dyZXNzLWxpbmVhclxuICAgICAgICAgICAgICAgICAgICAgIHYtaWY9XCJsb2FkaW5nXCJcbiAgICAgICAgICAgICAgICAgICAgICBjb2xvcj1cImRlZXAtcHVycGxlIGFjY2VudC00XCJcbiAgICAgICAgICAgICAgICAgICAgICBpbmRldGVybWluYXRlXG4gICAgICAgICAgICAgICAgICAgICAgcm91bmRlZFxuICAgICAgICAgICAgICAgICAgICAgIGhlaWdodD1cIjZcIlxuICAgICAgICAgICAgICAgICAgICA+PC92LXByb2dyZXNzLWxpbmVhcj5cbiAgICAgICAgICAgICAgICAgIDwvdi1jb2w+XG4gICAgICAgICAgICAgICAgPC92LXJvdz5cbiAgICAgICAgICAgICAgPC92LWNvbD5cbiAgICAgICAgICAgICAgPHYtY29sIGNvbHM9XCI2XCI+XG4gICAgICAgICAgICAgICAgPHYtcm93PlxuICAgICAgICAgICAgICAgICAgPHYtY29sIGNvbHM9XCI0XCI+XG4gICAgICAgICAgICAgICAgICAgIDx2LXN1YmhlYWRlcj5Hcm9zcyBMZXZlcmVkIE1vQzwvdi1zdWJoZWFkZXI+XG4gICAgICAgICAgICAgICAgICA8L3YtY29sPlxuICAgICAgICAgICAgICAgICAgPHYtY29sIGNvbHM9XCI4XCI+XG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbCB2LWlmPVwiIWxvYWRpbmdcIj57eyBncm9zc0xldmVyZWRNT0MgfX08L2xhYmVsPlxuXG4gICAgICAgICAgICAgICAgICAgIDx2LXByb2dyZXNzLWxpbmVhclxuICAgICAgICAgICAgICAgICAgICAgIHYtaWY9XCJsb2FkaW5nXCJcbiAgICAgICAgICAgICAgICAgICAgICBjb2xvcj1cImRlZXAtcHVycGxlIGFjY2VudC00XCJcbiAgICAgICAgICAgICAgICAgICAgICBpbmRldGVybWluYXRlXG4gICAgICAgICAgICAgICAgICAgICAgcm91bmRlZFxuICAgICAgICAgICAgICAgICAgICAgIGhlaWdodD1cIjZcIlxuICAgICAgICAgICAgICAgICAgICA+PC92LXByb2dyZXNzLWxpbmVhcj5cbiAgICAgICAgICAgICAgICAgIDwvdi1jb2w+XG4gICAgICAgICAgICAgICAgPC92LXJvdz5cblxuICAgICAgICAgICAgICAgIDx2LXJvdz5cbiAgICAgICAgICAgICAgICAgIDx2LWNvbCBjb2xzPVwiNFwiPlxuICAgICAgICAgICAgICAgICAgICA8di1zdWJoZWFkZXI+WWllbGQgT24gQ29zdDwvdi1zdWJoZWFkZXI+XG4gICAgICAgICAgICAgICAgICA8L3YtY29sPlxuICAgICAgICAgICAgICAgICAgPHYtY29sIGNvbHM9XCI4XCI+XG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbCB2LWlmPVwiIWxvYWRpbmdcIj57eyB5aWVsZE9uQ29zdCB9fTwvbGFiZWw+XG5cbiAgICAgICAgICAgICAgICAgICAgPHYtcHJvZ3Jlc3MtbGluZWFyXG4gICAgICAgICAgICAgICAgICAgICAgdi1pZj1cImxvYWRpbmdcIlxuICAgICAgICAgICAgICAgICAgICAgIGNvbG9yPVwiZGVlcC1wdXJwbGUgYWNjZW50LTRcIlxuICAgICAgICAgICAgICAgICAgICAgIGluZGV0ZXJtaW5hdGVcbiAgICAgICAgICAgICAgICAgICAgICByb3VuZGVkXG4gICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0PVwiNlwiXG4gICAgICAgICAgICAgICAgICAgID48L3YtcHJvZ3Jlc3MtbGluZWFyPlxuICAgICAgICAgICAgICAgICAgPC92LWNvbD5cbiAgICAgICAgICAgICAgICA8L3Ytcm93PlxuICAgICAgICAgICAgICA8L3YtY29sPlxuICAgICAgICAgICAgPC92LXJvdz5cbiAgICAgICAgICA8L3YtY2FyZD5cbiAgICAgICAgPC92LWNvbD5cbiAgICAgIDwvdi1yb3c+XG4gICAgPC92LWNvbnRhaW5lcj5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IGF4aW9zIGZyb20gXCJheGlvc1wiO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGRhdGE6ICh2bSkgPT4gKHtcbiAgICBsb2FkaW5nOiBmYWxzZSxcbiAgICBoYXNFcnJvcjogZmFsc2UsXG4gICAgLy9GSVJTVCBGT1JNXG4gICAgdG90YWxTRjogMSxcbiAgICBob2xkUGVyaW9kOiAxLFxuICAgIHB1cmNoYXNlUHJpY2U6IDEsXG4gICAgZXhpdENhcFJhdGU6IDEsXG4gICAgaW5QbGFjZVJlbnRQU0Y6IDEsXG4gICAgaW5QbGFjZUV4cGlyYXRpb246IG5ldyBEYXRlKFxuICAgICAgRGF0ZS5ub3coKSAtIG5ldyBEYXRlKCkuZ2V0VGltZXpvbmVPZmZzZXQoKSAqIDYwMDAwXG4gICAgKVxuICAgICAgLnRvSVNPU3RyaW5nKClcbiAgICAgIC5zdWJzdHIoMCwgMTApLFxuICAgIGluUGxhY2VFeHBpcmF0aW9uRm9ybWF0ZWQ6IHZtLmZvcm1hdERhdGUoXG4gICAgICBuZXcgRGF0ZShEYXRlLm5vdygpIC0gbmV3IERhdGUoKS5nZXRUaW1lem9uZU9mZnNldCgpICogNjAwMDApXG4gICAgICAgIC50b0lTT1N0cmluZygpXG4gICAgICAgIC5zdWJzdHIoMCwgMTApXG4gICAgKSxcbiAgICBuZXdUZW5hbnRSZW50UFNGOiAxLFxuICAgIG5ld1RlbmFudFRJU0Y6IDEsXG5cbiAgICAvL1NFQ09ORCBGT1JNXG4gICAgYW5hbHlzaXNTdGFydDogbmV3IERhdGUoRGF0ZS5ub3coKSAtIG5ldyBEYXRlKCkuZ2V0VGltZXpvbmVPZmZzZXQoKSAqIDYwMDAwKVxuICAgICAgLnRvSVNPU3RyaW5nKClcbiAgICAgIC5zdWJzdHIoMCwgMTApLFxuICAgIGFuYWx5c2lzU3RhcnRGb3JtYXRlZDogdm0uZm9ybWF0RGF0ZShcbiAgICAgIG5ldyBEYXRlKERhdGUubm93KCkgLSBuZXcgRGF0ZSgpLmdldFRpbWV6b25lT2Zmc2V0KCkgKiA2MDAwMClcbiAgICAgICAgLnRvSVNPU3RyaW5nKClcbiAgICAgICAgLnN1YnN0cigwLCAxMClcbiAgICApLFxuICAgIHJlaW1idXJzZW1lbnQ6IDEwMCxcbiAgICBicm9rZXJDb21pc3Npb246IDEsXG4gICAgZXhpdENvc3RzOiAyLFxuICAgIHVwZnJvbnRDYXBleENvc3RzUFNGOiA1LFxuICAgIHRyYW5zYWN0aW9uQ29zdHM6IDEsXG4gICAgbGVhc2luZ0NvbWlzc2lvbnM6IDcsXG4gICAgZXhwZXNuc2VzU2ZZcjogMy4wLFxuICAgIGx0YzogNjAsXG4gICAgZmluYW5jaW5nRmVlOiAxLFxuICAgIGludGVyZXN0UmF0ZTogNCxcbiAgICByZW50U3RlcHM6IDQsXG4gICAgZG93bnRpbWVNb250aHM6IDksXG4gICAgY2FwZXhSZXNlcnZlczogMC4xNSxcbiAgICBvdGhlckNsb3NpbmdDb3N0czogMSxcbiAgICBhY3F1aXNpdGlvbkZlZXM6IDEsXG4gICAgLy9SRVNVTFRTXG4gICAgdW5sZXZlcmVkSVJSOiAwLFxuICAgIHVubGV2ZXJlZE1PQzogMCxcbiAgICBncm9zc0xldmVyZWRJUlI6IDAsXG4gICAgZ3Jvc3NMZXZlcmVkTU9DOiAwLFxuICAgIHlpZWxkT25Db3N0OiAwLFxuXG4gICAgYWxsSW5wdXRzOiBmYWxzZSxcbiAgICB2YWxpZDogdHJ1ZSxcbiAgICB2YWxpZEFsbDogdHJ1ZSxcbiAgICBtb2RhbEFuYWx5c2lzOiBudWxsLFxuICAgIG1vZGFsSW5QbGFjZUV4cGlyYXRpb246IG51bGwsXG4gICAgZGF0ZTogbmV3IERhdGUoRGF0ZS5ub3coKSAtIG5ldyBEYXRlKCkuZ2V0VGltZXpvbmVPZmZzZXQoKSAqIDYwMDAwKVxuICAgICAgLnRvSVNPU3RyaW5nKClcbiAgICAgIC5zdWJzdHIoMCwgMTApLFxuICAgIG51bWJlclJ1bGVzOiBbXG4gICAgICAvLyh2KSA9PiAhIXYgfHwgXCJUaGUgZmllbGQgaXMgcmVxdWlyZWRcIixcbiAgICAgICh2KSA9PiAodiAmJiB2ID49IDApIHx8IFwiVmFsdWUgc2hvdWxkIGJlIG1vcmUgdGhhbiAwXCIsXG4gICAgXSxcbiAgfSksXG4gIGNvbXB1dGVkOiB7XG4gICAgY29tcHV0ZWRJblBsYWNlRXhwaXJhdGlvbkZvcm1hdGVkKCkge1xuICAgICAgcmV0dXJuIHRoaXMuZm9ybWF0RGF0ZSh0aGlzLmluUGxhY2VFeHBpcmF0aW9uKTtcbiAgICB9LFxuICAgIGNvbXB1dGVkQW5hbHlzaXNTdGFydEZvcm1hdGVkKCkge1xuICAgICAgcmV0dXJuIHRoaXMuZm9ybWF0RGF0ZSh0aGlzLmFuYWx5c2lzU3RhcnQpO1xuICAgIH0sXG4gIH0sXG4gIHdhdGNoOiB7XG4gICAgbG9hZGluZygpIHtcbiAgICAgIHJldHVybiB0aGlzLmxvYWRpbmc7XG4gICAgfSxcbiAgICBkYXRlKCkge1xuICAgICAgdGhpcy5pblBsYWNlRXhwaXJhdGlvbkZvcm1hdGVkID0gdGhpcy5mb3JtYXREYXRlKHRoaXMuZGF0ZSk7XG4gICAgfSxcbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIGZvcm1hdERhdGUoZGF0ZSkge1xuICAgICAgaWYgKCFkYXRlKSByZXR1cm4gbnVsbDtcblxuICAgICAgY29uc3QgW3llYXIsIG1vbnRoLCBkYXldID0gZGF0ZS5zcGxpdChcIi1cIik7XG4gICAgICByZXR1cm4gYCR7bW9udGh9LyR7ZGF5fS8ke3llYXJ9YDtcbiAgICB9LFxuICAgIHBhcnNlRGF0ZShkYXRlKSB7XG4gICAgICBpZiAoIWRhdGUpIHJldHVybiBudWxsO1xuXG4gICAgICBjb25zdCBbbW9udGgsIGRheSwgeWVhcl0gPSBkYXRlLnNwbGl0KFwiL1wiKTtcbiAgICAgIHJldHVybiBgJHt5ZWFyfS0ke21vbnRoLnBhZFN0YXJ0KDIsIFwiMFwiKX0tJHtkYXkucGFkU3RhcnQoMiwgXCIwXCIpfWA7XG4gICAgfSxcbiAgICBjYWxjdWxhdGUoKSB7XG4gICAgICBjb25zb2xlLmxvZyhcIkNhbGwgRyBTaGVldHMgRW5kcG9pbnRcIik7XG4gICAgICBpZiAoIXRoaXMuJHJlZnMuZm9ybS52YWxpZGF0ZSgpKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiRmlyc3QgZm9ybSBpbnZhbGlkXCIpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjb25zb2xlLmxvZyhcIkZpcnN0IGZvcm0gdmFsaWRcIik7XG4gICAgICBpZiAodGhpcy4kZGF0YS5hbGxJbnB1dHMpIHtcbiAgICAgICAgaWYgKCF0aGlzLiRyZWZzLm1vcmUudmFsaWRhdGUoKSkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKFwiU2Vjb25kIGZvcm0gaW52YWxpZFwiKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc29sZS5sb2coXCJTZWNvbmQgZm9ybSB2YWxpZFwiKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy4kZGF0YS5sb2FkaW5nID0gdHJ1ZTtcbiAgICAgIHRoaXMuJGRhdGEuaGFzRXJyb3IgPSBmYWxzZTtcbiAgICAgIGNvbnN0IHBheWxvYWQgPSB7XG4gICAgICAgIHRvdGFsU0Y6IHRoaXMuJGRhdGEudG90YWxTRixcbiAgICAgICAgaG9sZFBlcmlvZDogdGhpcy4kZGF0YS5ob2xkUGVyaW9kLFxuICAgICAgICBwdXJjaGFzZVByaWNlOiB0aGlzLiRkYXRhLnB1cmNoYXNlUHJpY2UsXG4gICAgICAgIGV4aXRDYXBSYXRlOiB0aGlzLiRkYXRhLmV4aXRDYXBSYXRlLFxuICAgICAgICBpblBsYWNlUmVudFBTRjogdGhpcy4kZGF0YS5pblBsYWNlUmVudFBTRixcbiAgICAgICAgaW5QbGFjZUV4cGlyYXRpb246IHRoaXMuY29tcHV0ZWRJblBsYWNlRXhwaXJhdGlvbkZvcm1hdGVkLFxuICAgICAgICBuZXdUZW5hbnRSZW50UFNGOiB0aGlzLiRkYXRhLm5ld1RlbmFudFJlbnRQU0YsXG4gICAgICAgIG5ld1RlbmFudFRJU0Y6IHRoaXMuJGRhdGEubmV3VGVuYW50VElTRixcbiAgICAgICAgYWxsSW5wdXRzOiBmYWxzZSxcbiAgICAgIH07XG5cbiAgICAgIGlmICh0aGlzLiRkYXRhLmFsbElucHV0cykge1xuICAgICAgICBwYXlsb2FkLmFsbElucHV0cyA9IHRydWU7XG4gICAgICAgIHBheWxvYWRbXCJhbmFseXNpc1N0YXJ0XCJdID0gdGhpcy4kZGF0YS5jb21wdXRlZEFuYWx5c2lzU3RhcnRGb3JtYXRlZDtcbiAgICAgICAgcGF5bG9hZFtcInJlaW1idXJzZW1lbnRcIl0gPSB0aGlzLiRkYXRhLnJlaW1idXJzZW1lbnQ7XG4gICAgICAgIHBheWxvYWRbXCJicm9rZXJDb21pc3Npb25cIl0gPSB0aGlzLiRkYXRhLmJyb2tlckNvbWlzc2lvbjtcbiAgICAgICAgcGF5bG9hZFtcImV4aXRDb3N0c1wiXSA9IHRoaXMuJGRhdGEuZXhpdENvc3RzO1xuICAgICAgICBwYXlsb2FkW1widXBmcm9udENhcGV4Q29zdHNQU0ZcIl0gPSB0aGlzLiRkYXRhLnVwZnJvbnRDYXBleENvc3RzUFNGO1xuICAgICAgICBwYXlsb2FkW1widHJhbnNhY3Rpb25Db3N0c1wiXSA9IHRoaXMuJGRhdGEudHJhbnNhY3Rpb25Db3N0cztcbiAgICAgICAgcGF5bG9hZFtcImxlYXNpbmdDb21pc3Npb25zXCJdID0gdGhpcy4kZGF0YS5sZWFzaW5nQ29taXNzaW9ucztcbiAgICAgICAgcGF5bG9hZFtcImV4cGVzbnNlc1NmWXJcIl0gPSB0aGlzLiRkYXRhLmV4cGVzbnNlc1NmWXI7XG4gICAgICAgIHBheWxvYWRbXCJsdGNcIl0gPSB0aGlzLiRkYXRhLmx0YztcbiAgICAgICAgcGF5bG9hZFtcImZpbmFuY2luZ0ZlZVwiXSA9IHRoaXMuJGRhdGEuZmluYW5jaW5nRmVlO1xuICAgICAgICBwYXlsb2FkW1wiaW50ZXJlc3RSYXRlXCJdID0gdGhpcy4kZGF0YS5pbnRlcmVzdFJhdGU7XG4gICAgICAgIHBheWxvYWRbXCJyZW50U3RlcHNcIl0gPSB0aGlzLiRkYXRhLnJlbnRTdGVwcztcbiAgICAgICAgcGF5bG9hZFtcImRvd250aW1lTW9udGhzXCJdID0gdGhpcy4kZGF0YS5kb3dudGltZU1vbnRocztcbiAgICAgICAgcGF5bG9hZFtcImNhcGV4UmVzZXJ2ZXNcIl0gPSB0aGlzLiRkYXRhLmNhcGV4UmVzZXJ2ZXM7XG4gICAgICAgIHBheWxvYWRbXCJvdGhlckNsb3NpbmdDb3N0c1wiXSA9IHRoaXMuJGRhdGEub3RoZXJDbG9zaW5nQ29zdHM7XG4gICAgICAgIHBheWxvYWRbXCJhY3F1aXNpdGlvbkZlZXNcIl0gPSB0aGlzLiRkYXRhLmFjcXVpc2l0aW9uRmVlcztcbiAgICAgIH1cbiAgICAgIGF4aW9zKHtcbiAgICAgICAgbWV0aG9kOiBcInBvc3RcIixcbiAgICAgICAgdXJsOiBcImh0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9jYWxjdWxhdG9yL2FwaS9jYWxjdWxhdG9yXCIsXG4gICAgICAgIGRhdGE6IHBheWxvYWQsXG4gICAgICAgIGhlYWRlcnM6IHsgQXV0aG9yaXphdGlvbjogXCJqd3QgXCIgKyB0aGlzLiRzdG9yZS5zdGF0ZS5qd3QgfSxcbiAgICAgIH0pXG4gICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4ge1xuICAgICAgICAgIGNvbnNvbGUubG9nKFwiUmVzcG9uc2UgXCIsIHJlc3BvbnNlKTtcblxuICAgICAgICAgIHRoaXMuJGRhdGEudW5sZXZlcmVkSVJSID0gcmVzcG9uc2UuZGF0YS51bmxldmVyZWRJUlI7XG4gICAgICAgICAgdGhpcy4kZGF0YS51bmxldmVyZWRNT0MgPSByZXNwb25zZS5kYXRhLnVubGV2ZXJlZE1PQztcbiAgICAgICAgICB0aGlzLiRkYXRhLmdyb3NzTGV2ZXJlZElSUiA9IHJlc3BvbnNlLmRhdGEuZ3Jvc3NMZXZlcmVkSVJSO1xuICAgICAgICAgIHRoaXMuJGRhdGEuZ3Jvc3NMZXZlcmVkTU9DID0gcmVzcG9uc2UuZGF0YS5ncm9zc0xldmVyZWRNT0M7XG4gICAgICAgICAgdGhpcy4kZGF0YS55aWVsZE9uQ29zdCA9IHJlc3BvbnNlLmRhdGEueWllbGRPbkNvc3Q7XG5cbiAgICAgICAgICB0aGlzLiRkYXRhLmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICAgIGNvbnNvbGUubG9nKFwiRXJyb3IgXCIsIGVycm9yKTtcbiAgICAgICAgICB0aGlzLiRkYXRhLmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgICAgICB0aGlzLiRkYXRhLmhhc0Vycm9yID0gdHJ1ZTtcbiAgICAgICAgfSk7XG4gICAgfSxcbiAgICBjYW5TdWJtaXQoKSB7XG4gICAgICBpZiAodGhpcy4kZGF0YS5hbGxJbnB1dHMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuJGRhdGEudmFsaWQgJiYgdGhpcy4kZGF0YS52YWxpZEFsbDtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzLiRkYXRhLnZhbGlkO1xuICAgIH0sXG4gIH0sXG59O1xuPC9zY3JpcHQ+XG5cbjxzdHlsZT5cbi5jdXN0b20tbG9hZGVyIHtcbiAgYW5pbWF0aW9uOiBsb2FkZXIgMXMgaW5maW5pdGU7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5ALW1vei1rZXlmcmFtZXMgbG9hZGVyIHtcbiAgZnJvbSB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMCk7XG4gIH1cbiAgdG8ge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XG4gIH1cbn1cbkAtd2Via2l0LWtleWZyYW1lcyBsb2FkZXIge1xuICBmcm9tIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwKTtcbiAgfVxuICB0byB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcbiAgfVxufVxuQC1vLWtleWZyYW1lcyBsb2FkZXIge1xuICBmcm9tIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwKTtcbiAgfVxuICB0byB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcbiAgfVxufVxuQGtleWZyYW1lcyBsb2FkZXIge1xuICBmcm9tIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwKTtcbiAgfVxuICB0byB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcbiAgfVxufVxuPC9zdHlsZT4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZ2lCQTtBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtBO0FBS0E7QUFDQTtBQUVBO0FBQ0E7QUFHQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBRUE7QUFBQTtBQUFBO0FBL0RBO0FBQUE7QUFrRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFOQTtBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTkE7QUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBVEE7QUFDQTtBQVdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUpBO0FBT0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQXpGQTtBQW5GQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./src/components/Home.vue?vue&type=script&lang=js&\n");

/***/ })

})